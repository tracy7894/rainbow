<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>聊天室</title>
    <script src="https://unpkg.com/pica@latest/dist/pica.min.js" defer></script>
</head>
<body>
  <h1>聊天室</h1>
  <h2>welcome to public room, <%= username %></h2>
  <h2><%= identity %></h2>
  <textarea id="text" placeholder="輸入你的消息"></textarea>
  <input id="btn" type="submit" value="提交"/>

  <h3>上傳圖片：</h3>
  <input type="file" id="imageInput" accept="image/*" />
  <button id="compressImage">發送圖片</button>
  <div id="sizeWarning" style="color: red; display: none;">圖片大小超過 5MB。</div>
  
  <!-- 顯示聊天訊息的區域 -->
  <div id="messages"></div>

  <script src="https://cdn.socket.io/4.0.0/socket.io.min.js"></script>
  <script src="https://cdn.socket.io/4.0.0/socket.io.min.js"></script>
  <script>
    const username = '<%= username %>';
    const groupId = '<%= groupId %>';
    const identity = '<%= identity %>'; // 傳遞身份
  console.log("身分="+identity)
    // 建立連接，並傳遞 identity 和 groupId
    const socket = io.connect('http://localhost:3000', {
      query: { groupId: 'publicRoom', identity: identity, username: username }
    });
  
    // 載入聊天紀錄
    socket.on('chatHistory', (history) => {
      document.getElementById("messages").innerHTML = "";
      history.forEach(data => {
        if (data.message) {
          displayMessage(data);
        } else if (data.image) {
          displayImage(data.username, data.image);
        }
      });
    });
  
    // 發送文字消息
    document.getElementById("btn").onclick = function () {
      const val = document.getElementById("text").value;
      if (!val) return;
  
      document.getElementById("text").value = "";
      socket.emit('message', { username: username, message: val, groupId: groupId, identity: identity });
    };
  
    // 壓縮並發送圖片
    document.getElementById('compressImage').onclick = async function () {
      const file = document.getElementById('imageInput').files[0];
      if (!file) return;
  
      const maxSize = 5 * 1048576; // 5MB
  
      if (file.size > maxSize) {
        document.getElementById("sizeWarning").style.display = "block";
        return;
      } else {
        document.getElementById("sizeWarning").style.display = "none";
      }
  
      // 壓縮圖片
      const pica = window.pica({ features: ["all"] });
      const img = document.createElement('img');
      const canvas = document.createElement('canvas');
  
      const reader = new FileReader();
      
      reader.onload = function (event) {
        img.src = event.target.result;
  
        img.onload = async function () {
          canvas.width = img.width / 2;  // 縮小一半
          canvas.height = img.height / 2; // 縮小一半
  
          await pica.resize(img, canvas, { quality: 3 });
          const base64Image = canvas.toDataURL('image/jpeg', 0.8);
          socket.emit('image', { username: username, image: base64Image, groupId: groupId, identity: identity });
        };
      };
      reader.readAsDataURL(file); 
    };
  
    // 顯示文字消息
    socket.on('message', (msg) => {
      displayMessage(msg);
    });
  
    // 顯示圖片消息
    socket.on('image', (data) => {
      displayImage(data.username, data.image);
    });
  
    // 顯示文字消息的函數
    function displayMessage(msg) {
      const p = document.createElement("p");
      p.innerText = `${msg.username}: ${msg.message}`;
      document.getElementById("messages").appendChild(p);
    }
  
    // 顯示圖片消息的函數
    function displayImage(username, image) {
      const p = document.createElement("p");
      p.innerText = `${username} 發送了一張圖片：`;
      const img = document.createElement("img");
      img.src = image; 
      img.style.maxWidth = "200px"; 
      img.style.maxHeight = "200px";
      document.getElementById("messages").appendChild(p);
      document.getElementById("messages").appendChild(img);
    }
  </script>
  
</body>
</html>
